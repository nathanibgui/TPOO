{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6bd1ed59\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"home-page\"\n};\nconst _hoisted_2 = {\n  class: \"navbar\"\n};\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  class: \"container mt-4\"\n};\nconst _hoisted_6 = {\n  class: \"row\"\n};\nconst _hoisted_7 = {\n  class: \"col-md-9\"\n};\nconst _hoisted_8 = {\n  class: \"user-form\"\n};\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email :\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\"\n}, \"Nom d'utilisateur :\", -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Récupérer les données utilisateur\", -1 /* HOISTED */));\nconst _hoisted_14 = {\n  key: 0,\n  class: \"user-info\"\n};\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Informations de l'utilisateur :\", -1 /* HOISTED */));\nconst _hoisted_16 = {\n  key: 1,\n  class: \"user-info\"\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"L'utilisateur n'existe pas dans la base de données.\", -1 /* HOISTED */));\nconst _hoisted_18 = [_hoisted_17];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Contenu du composant Utilisateur ici \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_router_link, {\n    to: \"/\",\n    class: \"nav-link\",\n    exact: \"\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Dashboard \")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: \"/orders\",\n    class: \"nav-link\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Orders \")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: \"/products\",\n    class: \"nav-link\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Products \")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: \"/customers\",\n    class: \"nav-link\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Customers \")]),\n    _: 1 /* STABLE */\n  })]), $data.userExists ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_4, \"Bonjour : \" + _toDisplayString($data.username), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\" Votre formulaire ici \"), $data.userExists ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 0,\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.submitUser && $options.submitUser(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData.email = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.email]])]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formData.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.username]])]), _hoisted_13])], 32 /* HYDRATE_EVENTS */)) : _createCommentVNode(\"v-if\", true)])])]), $data.userExists ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_hoisted_15, _createElementVNode(\"p\", null, \"Email : \" + _toDisplayString($data.email), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Nom d'utilisateur : \" + _toDisplayString($data.username), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $data.showErrorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [..._hoisted_18])) : _createCommentVNode(\"v-if\", true)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_hoisted_17","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_router_link","to","exact","$data","userExists","_createElementBlock","_hoisted_4","_toDisplayString","username","_hoisted_5","_hoisted_6","_hoisted_7","onSubmit","_cache","_withModifiers","args","$options","submitUser","_hoisted_8","_hoisted_9","_hoisted_10","id","formData","email","$event","required","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","showErrorMessage","_hoisted_16","_hoisted_18"],"sources":["C:\\Users\\ASUS\\dashboard\\src\\components\\GestionUtilisateurs.vue"],"sourcesContent":["<template>\r\n  <!-- Contenu du composant Utilisateur ici -->\r\n  <div class=\"home-page\">\r\n\r\n    <div class=\"navbar\">\r\n      <div class=\"container\">\r\n        <router-link to=\"/\" class=\"nav-link\" exact>\r\n          Dashboard\r\n        </router-link>\r\n        <router-link to=\"/orders\" class=\"nav-link\">\r\n          Orders\r\n        </router-link>\r\n        <router-link to=\"/products\" class=\"nav-link\">\r\n          Products\r\n        </router-link>\r\n        <router-link to=\"/customers\" class=\"nav-link\">\r\n          Customers\r\n        </router-link>\r\n      </div>\r\n\r\n      <h2 v-if=\"userExists\">Bonjour : {{ username }}</h2>\r\n    </div>\r\n\r\n    <div class=\"container mt-4\">\r\n      <div class=\"row\">\r\n\r\n        <div class=\"col-md-9\">\r\n          <!-- Votre formulaire ici -->\r\n          <form v-if=\"userExists\" @submit.prevent=\"submitUser\">\r\n            <div class=\"user-form\">\r\n              <div class=\"form-group\">\r\n                <label for=\"email\">Email :</label>\r\n                <input type=\"email\" id=\"email\" v-model=\"formData.email\" required>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"username\">Nom d'utilisateur :</label>\r\n                <input type=\"text\" id=\"username\" v-model=\"formData.username\" required>\r\n              </div>\r\n              <button type=\"submit\">Récupérer les données utilisateur</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"userExists\" class=\"user-info\">\r\n      <h2>Informations de l'utilisateur :</h2>\r\n      <p>Email : {{ email }}</p>\r\n      <p>Nom d'utilisateur : {{ username }}</p>\r\n    </div>\r\n    <div class=\"user-info\" v-if=\"showErrorMessage\">\r\n      <p>L'utilisateur n'existe pas dans la base de données.</p>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default {\r\n  name: 'GestionUtilisateurs',\r\n  data() {\r\n    return {\r\n      selected: this.$route.params.city || '', // Utilisez le paramètre de l'URL comme valeur initiale\r\n      formData:{\r\n        email:'',\r\n        username:'',\r\n      },\r\n      userExists: false, // Ajout d'une variable pour suivre si l'utilisateur existe\r\n      email: '', // Variable pour stocker l'e-mail de l'utilisateur\r\n      username: '', // Variable pour stocker le nom d'utilisateur de l'utilisateur\r\n      userId: '',\r\n      showErrorMessage:false,\r\n      options: ['Paris', 'Nice', 'Barcelone'],\r\n      meteoDonnee: null\r\n    };\r\n  },\r\n  computed: {\r\n    formattedDate() {\r\n      return moment().locale('fr').format('LL');\r\n    },\r\n  },\r\n  methods: {\r\n    async createUser() {\r\n\r\n      try {\r\n        // Effectuer une requête POST pour créer un nouvel utilisateur\r\n        const response = await axios.post('http://localhost:4000/api/users', this.formData);\r\n        console.log('Utilisateur créé avec succès:', response.data);\r\n        // Mettez en œuvre la logique nécessaire après la création de l'utilisateur ici\r\n      } catch (error) {\r\n        console.error('Erreur lors de la création de l\\'utilisateur :', error);\r\n      }\r\n    },\r\n    async updateUser() {\r\n      const userId= 1 ;\r\n      try {\r\n        // Effectuer une requête PUT pour mettre à jour l'utilisateur existant\r\n        const response = await axios.put(`http://localhost:4000/api/users/${userId}`, this.formData);\r\n        console.log('Utilisateur mis à jour avec succès:', response.data);\r\n        // Mettez en œuvre la logique nécessaire après la mise à jour de l'utilisateur ici\r\n      } catch (error) {\r\n        console.error('Erreur lors de la mise à jour de l\\'utilisateur :', error);\r\n      }\r\n    },\r\n    async getUser() {\r\n      const userId= 1 ;\r\n      try {\r\n        // Effectuer une requête GET pour obtenir les détails de l'utilisateur\r\n        const response = await axios.get(`http://localhost:4000/api/users/${userId}`);\r\n        console.log('Détails de l\\'utilisateur récupérés avec succès:', response.data);\r\n        // Mettez en œuvre la logique nécessaire après avoir obtenu les détails de l'utilisateur ici\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des détails de l\\'utilisateur :', error);\r\n      }\r\n    },\r\n    async supprimerUser() {\r\n      const userId= 1 ;\r\n      try {\r\n        // Effectuer une requête DELETE pour supprimer l'utilisateur\r\n        const response = await axios.delete(`http://localhost:4000/api/users/${userId}`);\r\n        console.log('Utilisateur supprimé avec succès:', response.data);\r\n        // Mettez en œuvre la logique nécessaire après la suppression de l'utilisateur ici\r\n      } catch (error) {\r\n        console.error('Erreur lors de la suppression de l\\'utilisateur :', error);\r\n      }\r\n    },\r\n    async submitUser() {\r\n      const email = this.formData.email;\r\n      const username = this.formData.username;\r\n      try {\r\n        // Effectuez une requête à l'API pour vérifier si l'utilisateur existe\r\n        const response = await axios.get(`http://localhost:4000/api/users?email=${email}&username=${username}`);\r\n\r\n\r\n        if (response.data) {\r\n          //const userId= response.data.id;\r\n\r\n          this.userExists = true;\r\n          this.email=email;\r\n          this.username=username;\r\n          this.showErrorMessage = false;\r\n          this.userId=response.data.id;\r\n\r\n          console.log(response.data.id);\r\n        }\r\n        else {\r\n          this.userExists = false;\r\n          this.showErrorMessage = true;\r\n          // L'utilisateur n'existe pas dans la base de données\r\n          console.log(response.data);\r\n        }\r\n      } catch (error) {\r\n        this.userExists = false;\r\n        this.showErrorMessage = true;\r\n      }\r\n    },\r\n    fetchData() {\r\n      const requestUrl = 'https://api.openweathermap.org/data/2.5/weather?lat=44.34&lon=10.99&appid=4dcc2218a9bf517e2c98a9da0ca721cd';\r\n\r\n      // Fonction de réussite (resolveCallback) en gros response est un objet ou tout est stocke il faut utiliser\r\n      // un systeme de .data pour recuperer les données\r\n\r\n      const resolveCallback = response => {\r\n        // Traite les données de la réponse ici\r\n        console.log(response.data);\r\n      };\r\n\r\n      // Fonction d'échec (rejectCallback)\r\n      const rejectCallback = error => {\r\n        console.error('Erreur lors de la requête :', error);\r\n      };\r\n\r\n      // Effectuer la requête Axios avec les callbacks de réussite et d'échec\r\n      axios.get(requestUrl).then(resolveCallback, rejectCallback);\r\n\r\n    },\r\n    search(ville) {\r\n      // Logique de recherche avec la ville ici (par exemple, appel à une API)\r\n      // Mettez à jour votre composant avec les résultats de la recherche\r\n\r\n      // Dans cet exemple, générons une température aléatoire entre 1 et 32\r\n      const randomTemperature = Math.floor(Math.random() * 32) + 1;\r\n\r\n      switch (ville) {\r\n        case 'Paris':\r\n          this.meteoDonnee = { temperature: randomTemperature, city: ville }; // Remplacez cela par les données réelles\r\n          break;\r\n        case 'Nice':\r\n          this.meteoDonnee = {temperature: randomTemperature, city: ville }; // Remplacez cela par les données réelles\r\n          break;\r\n        case 'Barcelone':\r\n          this.meteoDonnee = { temperature: randomTemperature, city: ville }; // Remplacez cela par les données réelles\r\n          break;\r\n        default:\r\n          this.meteoDonnee = null;\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    '$route.params.city': function(newCity) {\r\n      this.selected = newCity || ''; // Mettez à jour la ville sélectionnée lorsque le paramètre de l'URL change\r\n      this.search(newCity); // Effectuez la recherche avec la nouvelle ville\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styles pour la page d'accueil */\r\n\r\n/* Style pour la barre de navigation */\r\n.navbar {\r\n  background-color: beige;\r\n  padding: 15px 0; /* Ajoutez un espace autour du texte dans la navbar */\r\n  width: 100%; /* Faites en sorte que la navbar occupe toute la largeur de son conteneur */\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1); /* Ajoute une légère ombre */\r\n}\r\n\r\n/* Style pour les liens dans la navbar */\r\n.navbar a {\r\n  margin: 0 20px; /* Ajoute un espace entre chaque lien */\r\n  color: black; /* Couleur du texte des liens */\r\n  text-decoration: none; /* Supprime la soulignement des liens */\r\n  font-weight: bold; /* Mettez en gras le texte des liens */\r\n  font-size: 1.2rem; /* Taille de la police des liens */\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/* Changez la couleur du texte des liens au survol */\r\n.navbar a:hover {\r\n  color: darkred; /* Couleur du texte des liens au survol */\r\n}\r\n\r\n/* Style pour la barre latérale */\r\n.sidebar {\r\n  background-color: #ffffff;\r\n  border: 1px solid #dee2e6;\r\n  border-radius: 5px;\r\n  width: 250px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n\r\n\r\n/* Vos autres styles restants... */\r\n\r\n/* Style pour le formulaire utilisateur */\r\n.user-form {\r\n  max-width: 400px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  background-color: #fff;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.user-form .form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.user-form .form-group label {\r\n  display: block;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.user-form .form-group input[type=\"email\"],\r\n.user-form .form-group input[type=\"text\"] {\r\n  width: calc(100% - 20px);\r\n  padding: 8px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.user-form button[type=\"submit\"] {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.user-form button[type=\"submit\"]:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}